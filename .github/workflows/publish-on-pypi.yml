name: Publish Python 🐍 distribution 📦 to PyPI

on:
  release:
    types: [created]
  push: {}

jobs:
  build:
    strategy:
      matrix:
        python_package_dir: [ 'pirogue-admin-client', 'pirogue-admin-api/src/python' ]

    name: Build distribution 📦
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ matrix.python_package_dir }}

    if: github.event_name == 'push' || github.event_name == 'release'

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
    - name: Install pypa/build
      run: >-
        python3 -m
        pip install
        build
        --user
    - name: Build a binary wheel and a source tarball
      run: python3 -m build
    - name: Store the distribution packages
      if: github.event_name == 'release'
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

  publish-to-pypi:
    name: >-
      Publish Python 🐍 distribution 📦 to PyPI
    needs:
    - build
    environment:
      name: pypi
      url: https://pypi.org/p/pcapng-utils
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    if: startsWith(github.ref, 'refs/tags/') && github.event_name == 'release'  # only publish to PyPI on tag pushes
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ${{ matrix.python_package_dir }}

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution 📦 to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1

  github-release:
    name: >-
      Sign the Python 🐍 distribution 📦 with Sigstore
      and upload them to GitHub Release
    needs:
    - publish-to-pypi
    runs-on: ubuntu-latest

    if: github.event_name == 'release'
    defaults:
      run:
        working-directory: ${{ matrix.python_package_dir }}

    permissions:
      contents: write  # IMPORTANT: mandatory for making GitHub Releases
      id-token: write  # IMPORTANT: mandatory for sigstore

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Sign the dists with Sigstore
      uses: sigstore/gh-action-sigstore-python@v2.1.1
      with:
        inputs: >-
          ./dist/*.tar.gz
          ./dist/*.whl
    - name: Upload artifact signatures to GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      # Upload to GitHub Release using the `gh` CLI.
      # `dist/` contains the built packages, and the
      # sigstore-produced signatures and certificates.
      run: >-
        gh release upload
        '${{ github.ref_name }}' dist/**
        --repo '${{ github.repository }}'