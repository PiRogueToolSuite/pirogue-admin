pirogue-admin (1.2.2) UNRELEASED; urgency=medium

  * Bridge the gap between both CLI tools:
     - We could fold pirogue-admin-wireguard into pirogue-admin, but
       that'd require some work, and proper integration is pending via
       a pirogue-admin server exposing an API through gRPC, via a remote
       API, and via a local pirogue-admin client.
     - Let's not spend more time on this right now, and re-use
       pirogue-admin variables if any, parsing pirogue-admin's config.yaml
       file manually, and keeping fallback variables if the file is
       missing or is missing some variables.
     - This makes it possible for pirogue-base.postinst to leverage
       pirogue-admin for any of the three supported modes, and for users
       to manipulate peers using pirogue-admin-wireguard.
  * Fix prefix length for AllowedIPs in each [Peer] section “server”-side
    (from /24 to /32).

 -- Cyril Brulebois <cyril@debamax.com>  Fri, 23 Aug 2024 03:42:43 +0200

pirogue-admin (1.2.1) bookworm; urgency=medium

  * Add initial support for VPN mode to the autodetection code:
     - Implement detect_external_ipv4_address() using icanhazip.com
     - Use it to set PUBLIC_EXTERNAL_NETWORK_ADDR in the VPN case.
     - Mark VPN as a supported operating mode accordingly.
  * Switch from a SYSTEM_DNSMASQ condition to an ENABLE_DHCP variable:
     - We need DHCP support in the AP case.
     - We might need to enable OR disable DHCP support in the APPLIANCE
       case.
     - We don't need DHCP support in the VPN case (but it doesn't hurt).
  * Set ENABLE_DHCP to true in all use cases for the time being, and let
    users disable it if they so wish.
  * Delete support for the SYSTEM_DNSMASQ condition.
  * Introduce a bool formatter. While we don't actually use this new
    ENABLE_DHCP variable (defined as a boolean) anywhere in the templates,
    we need to build replacement strings for all variables. Settle for
    using str() on the value, arbitrarily.
  * Turn format_dhcp_range_network() into format_dhcp_range_line() so that
    the entirety of the dhcp-range= line (for the dnsmasq snippet) can be
    controlled; we want to comment it out entirely when ENABLE_DHCP is
    false. As a side effect, we're moving the “24h” lease validity from
    the template shipped by pirogue-networking to formatters.py; but that
    particular combination of variables was weird already anyway.
  * Add initial support for VPN mode to SystemConfig:
     - Mention PUBLIC_EXTERNAL_NETWORK_ADDR as being tricky in various
       comments and docstrings, its being needed depends on the value of
       a different variable (SYSTEM_OPERATING_MODE). See commit messages
       for possible solutions.
     - Add support for VPN mode in apply_configuration: make sure
       PUBLIC_EXTERNAL_NETWORK_ADDR is set (see above), then instantiate
       WgManager with it and with the isolated address and network, which
       should be enough to make sure wg0 comes up, the systemd unit is
       enabled and started, the private / private key pair is created,
       etc.

 -- Cyril Brulebois <cyril@debamax.com>  Fri, 23 Aug 2024 02:20:46 +0200

pirogue-admin (1.2.0) bookworm; urgency=medium

  * Add initial WireGuard support: ship a pirogue-admin-wireguard command,
    leveraging a new WgManager class, managing the PiRogue-side peer as
    well as remote peers.
  * Add qrencode to Depends accordingly.
  * Ship /var/lib/pirogue/admin(/wireguard) directories in the package.
  * Add support for detecting the public IPv4 address using icanhazip.com.

 -- Cyril Brulebois <cyril@debamax.com>  Thu, 22 Aug 2024 01:53:11 +0200

pirogue-admin (1.1.0) bookworm; urgency=medium

  * Ship pirogue-admin under /usr/sbin instead of /usr/bin. Users should
    be using commands provided by pirogue-admin-client.
  * Use the logging module instead of print() in various places.
  * Add variables support to the SUPPORTED_CONDITIONS dict, and ensure all
    needed variables can be gathered and checked accordingly.
  * Add condition validation to the index.yaml parsing.
  * Add initial support for condition and actions_else, in addition to
    regular actions support. The combination of actions, condition, and
    actions_else is going to be very useful to configure and enable
    a service (if the condition is met), and to deconfigure and disable
    a service (if it isn't). To make sure we can toggle a condition and
    have actions run in both cases, it seems easier to have a slight
    asymmetry:
     - If the condition is fulfilled, actions are run if the contents of
       the file change.
     - If the condition is not fulfilled, the file is removed (not keeping
       outdated/irrelevant contents around), and actions_else are run
       unconditionally.
  * Make the DNSMASQ condition implementation consider the SYSTEM_DNSMASQ
    variable, but only in the APPLIANCE mode (since the AP mode absolutely
    requires it).
  * Hardcode SYSTEM_DNSMASQ in the autodetection code for the time being.
    Users can turn it off if they so wish. We probably want to move to
    a different distinction anyway: have dnsmasq available in any case,
    but only enable DHCP conditionally.
  * Add initial systemd-networkd/systemd-resolved support, allowing to
    configure the isolated network.
  * Finally, mark APPLIANCE mode as supported.

 -- Cyril Brulebois <cyril@debamax.com>  Sat, 17 Aug 2024 18:38:57 +0200

pirogue-admin (1.0.0) bookworm; urgency=medium

  * Initial release.
  * It supports Raspberry Pi devices, implementing autodetection support
    and configuration management for packages shipping pirogue-admin
    metadata.

 -- Cyril Brulebois <cyril@debamax.com>  Wed, 14 Aug 2024 18:26:57 +0200
